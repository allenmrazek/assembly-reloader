REM Post-Build event that targets specific extensions and appends a new extension 
REM
REM Usage: [directory to search] [[targetExtension] [newExtension]]

echo Validating ReeperLoaderTarget arguments...

if [%1]==[] (
	echo ERROR: Must supply directory of target assemblies
	exit -33
)

if NOT EXIST %1 (
	echo ERROR: supplied directory does not exist
	exit -55
)

REM if [%2]==[] (
REM 	echo ERROR: Must supply target dll filename
REM 	exit -44
REM )

REM if NOT EXIST "%~1%~2" (
REM 	echo ERROR: Failed to find DLL named "%~2"
REM 	exit -66
REM )

REM echo Renaming %~2 to %~2.%ReeperTargetExtension%
REM if exist "%~1%~2%ReeperTargetExtension%" (
REM	echo ERROR: Target named "%~2%ReeperTargetExtension%" already exists
REM	exit -77
REM )
REM move "%~1%~2" "%~1%~2.%ReeperTargetExtension%"
REM echo Success

cd %~1

shift


:MoveNext

if [%1]==[] goto:Done
if [%2]==[] goto:Done

echo hunting for %1
echo replacing with %2%

REM note: extension includes period
SETLOCAL ENABLEDELAYEDEXPANSION
for %%f in (*.%~1) DO (
REM  renaming AssemblyReloader.dll.mdb to D:\AssemblyReloader.dll.reeper.mdb
set file=%%~nf
set extension=%%~xf
echo file: !file! : %%f
Call:strLen extension result
echo renaming %%f to %%~df\%%~nf.%~2
echo length: !result!
echo filename without extension: !!file!:~0,!result!!
set result=%file:~0,!length!%
echo result: !result!
)

shift
shift
goto:MoveNext

:strLen string len -- returns the length of a string
::                 -- string [in]  - variable name containing the string being measured for length
::                 -- len    [out] - variable to be used to return the string length
:: Many thanks to 'sowgtsoi', but also 'jeb' and 'amel27' dostips forum users helped making this short and efficient
:$created 20081122 :$changed 20101116 :$categories StringOperation
:$source http://www.dostips.com
(   SETLOCAL ENABLEDELAYEDEXPANSION
    set "str=A!%~1!"&rem keep the A up front to ensure we get the length and not the upper bound
                     rem it also avoids trouble in case of empty string
    set "len=0"
    for /L %%A in (12,-1,0) do (
        set /a "len|=1<<%%A"
        for %%B in (!len!) do if "!str:~%%B,1!"=="" set /a "len&=~1<<%%A"
    )
)
( ENDLOCAL & REM RETURN VALUES
    IF "%~2" NEQ "" SET /a %~2=%len%
)
EXIT /b

:Done