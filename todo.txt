- interception on nested types likely doesn't work

- confirm that initial load of VesselModules works, since they aren't read from the LoadedAssembly.types list like I thought

- Insert tracking code (especially for ScenarioModules, MonoBehaviours marked with KSPAddon (or KSPAddon-derived), etc) so we can intelligently destroy them on reload

- Insert tracking code for GameEvent registrations so we can remove any that get missed when plugin is unloaded, usually due to forgetfulness or an exception being thrown in destruction code

- Verify that reloadable plugins aren't already loaded by the game (for example: TestProject.dll existing alongside TestProject.dll.reloadable in GameData which will break the whole thing unless TestProject.dll is uninstalled first)

- check for changed reloadable dependencies; reload them also

- resolve reloadable dependencies

- update moduleRef and associated configs for unloaded/packed PartModule instances

- clear module snapshots on GameDatabase reload

- bugfix: reloading database might change GameData dir instance, causing us to point to an old "snapshot" of disk contents

- bugfix: reloading while in editor with parts that have UI elements sometimes causes duplicate PartModules to exist on the ship

- bugfix: module info isn't updated (it's created by PartLoader and then never touched afterwards, might cause NRE if PartModule implements IModuleInfo)

- bugfix: set AssemblyLoader.LoadedAssembly dataPath, used by GetPathByType?


- todo: ScienceExperiments (?)
- todo: Contracts
- todo: strategies
- todo: kerbal experience traits?
- todo: kerbal experience effects?
- todo: parts
- todo: InternalModules
- todo: VesselModules (?)
